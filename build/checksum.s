;
; File generated by cc65 v 2.18 - N/A
;
	.fopt		compiler,"cc65 v 2.18 - N/A"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.export		_calculate_checksum
	.export		_update_checksum
	.export		_check_checksum
	.importzp	_temp0
	.importzp	_temp5
	.import		_checksum
	.import		_level_high_scores
	.import		_gauntlet_high_score
	.import		_settings
	.export		_clear_saved_data

; ---------------------------------------------------------------
; void __near__ calculate_checksum (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_calculate_checksum: near

.segment	"CODE"

;
; temp5 = gauntlet_high_score;
;
	lda     _gauntlet_high_score+1
	sta     _temp5+1
	lda     _gauntlet_high_score
	sta     _temp5
;
; for (temp0 = 0; ; ++temp0) {
;
	lda     #$00
	sta     _temp0
;
; temp5 += level_high_scores[temp0];
;
	tax
L0044:	lda     _temp0
	asl     a
	bcc     L0043
	inx
	clc
L0043:	adc     #<(_level_high_scores)
	sta     ptr1
	txa
	adc     #>(_level_high_scores)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	clc
	adc     _temp5
	sta     _temp5
	txa
	adc     _temp5+1
	sta     _temp5+1
;
; if (temp0 == 255) { break; }
;
	lda     _temp0
	cmp     #$FF
	beq     L002C
;
; for (temp0 = 0; ; ++temp0) {
;
	ldx     #$00
	inc     _temp0
	jmp     L0044
;
; temp5 += settings.raw_value;
;
L002C:	lda     _settings
	clc
	adc     _temp5
	sta     _temp5
	lda     _settings+1
	adc     _temp5+1
	sta     _temp5+1
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ update_checksum (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_update_checksum: near

.segment	"CODE"

;
; calculate_checksum();
;
	jsr     _calculate_checksum
;
; checksum = temp5;
;
	lda     _temp5+1
	sta     _checksum+1
	lda     _temp5
	sta     _checksum
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ check_checksum (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_check_checksum: near

.segment	"CODE"

;
; calculate_checksum();
;
	jsr     _calculate_checksum
;
; if (checksum != temp5) {
;
	lda     _temp5
	ldx     _temp5+1
	cpx     _checksum+1
	bne     L0045
	cmp     _checksum
;
; clear_saved_data();
;
L0045:	jne     _clear_saved_data
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ clear_saved_data (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_clear_saved_data: near

.segment	"CODE"

;
; checksum = 0;
;
	lda     #$00
	sta     _checksum
	sta     _checksum+1
;
; gauntlet_high_score = 0;
;
	sta     _gauntlet_high_score
	sta     _gauntlet_high_score+1
;
; for (temp0 = 0; ; ++temp0) {
;
	sta     _temp0
;
; ((unsigned char *)level_high_scores)[temp0] = 0;
;
L0016:	ldy     _temp0
	lda     #$00
	sta     _level_high_scores,y
;
; ((unsigned char *)level_high_scores + 256)[temp0] = 0;
;
	ldy     _temp0
	sta     _level_high_scores+256,y
;
; if (temp0 == 255) { break; }
;
	lda     _temp0
	cmp     #$FF
	beq     L0046
;
; for (temp0 = 0; ; ++temp0) {
;
	inc     _temp0
	jmp     L0016
;
; settings.raw_value = 0;
;
L0046:	lda     #$00
	sta     _settings
	sta     _settings+1
;
; }
;
	rts

.endproc

